/**
 * OpenShift API (with Kubernetes)
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'metav1.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 
 *
 * OpenAPI spec version: v3.6.173.0.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenShiftApiWithKubernetes);
  }
}(this, function(expect, OpenShiftApiWithKubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenShiftApiWithKubernetes.ExtensionsV1beta1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ExtensionsV1beta1Api', function() {
    describe('createExtensionsV1beta1DaemonSetForAllNamespaces', function() {
      it('should call createExtensionsV1beta1DaemonSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1DaemonSetForAllNamespaces
        //instance.createExtensionsV1beta1DaemonSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1DeploymentForAllNamespaces', function() {
      it('should call createExtensionsV1beta1DeploymentForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1DeploymentForAllNamespaces
        //instance.createExtensionsV1beta1DeploymentForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces', function() {
      it('should call createExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces
        //instance.createExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1IngressForAllNamespaces', function() {
      it('should call createExtensionsV1beta1IngressForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1IngressForAllNamespaces
        //instance.createExtensionsV1beta1IngressForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1NamespacedDaemonSet', function() {
      it('should call createExtensionsV1beta1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1NamespacedDaemonSet
        //instance.createExtensionsV1beta1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1NamespacedDeployment', function() {
      it('should call createExtensionsV1beta1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1NamespacedDeployment
        //instance.createExtensionsV1beta1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1NamespacedDeploymentRollbackRollback', function() {
      it('should call createExtensionsV1beta1NamespacedDeploymentRollbackRollback successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1NamespacedDeploymentRollbackRollback
        //instance.createExtensionsV1beta1NamespacedDeploymentRollbackRollback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1NamespacedHorizontalPodAutoscaler', function() {
      it('should call createExtensionsV1beta1NamespacedHorizontalPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1NamespacedHorizontalPodAutoscaler
        //instance.createExtensionsV1beta1NamespacedHorizontalPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1NamespacedIngress', function() {
      it('should call createExtensionsV1beta1NamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1NamespacedIngress
        //instance.createExtensionsV1beta1NamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1NamespacedNetworkPolicy', function() {
      it('should call createExtensionsV1beta1NamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1NamespacedNetworkPolicy
        //instance.createExtensionsV1beta1NamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1NamespacedReplicaSet', function() {
      it('should call createExtensionsV1beta1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1NamespacedReplicaSet
        //instance.createExtensionsV1beta1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1NetworkPolicyForAllNamespaces', function() {
      it('should call createExtensionsV1beta1NetworkPolicyForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1NetworkPolicyForAllNamespaces
        //instance.createExtensionsV1beta1NetworkPolicyForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1PodSecurityPolicy', function() {
      it('should call createExtensionsV1beta1PodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1PodSecurityPolicy
        //instance.createExtensionsV1beta1PodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1ReplicaSetForAllNamespaces', function() {
      it('should call createExtensionsV1beta1ReplicaSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1ReplicaSetForAllNamespaces
        //instance.createExtensionsV1beta1ReplicaSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createExtensionsV1beta1ThirdPartyResource', function() {
      it('should call createExtensionsV1beta1ThirdPartyResource successfully', function(done) {
        //uncomment below and update the code to test createExtensionsV1beta1ThirdPartyResource
        //instance.createExtensionsV1beta1ThirdPartyResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1CollectionNamespacedDaemonSet', function() {
      it('should call deleteExtensionsV1beta1CollectionNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1CollectionNamespacedDaemonSet
        //instance.deleteExtensionsV1beta1CollectionNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1CollectionNamespacedDeployment', function() {
      it('should call deleteExtensionsV1beta1CollectionNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1CollectionNamespacedDeployment
        //instance.deleteExtensionsV1beta1CollectionNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1CollectionNamespacedHorizontalPodAutoscaler', function() {
      it('should call deleteExtensionsV1beta1CollectionNamespacedHorizontalPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1CollectionNamespacedHorizontalPodAutoscaler
        //instance.deleteExtensionsV1beta1CollectionNamespacedHorizontalPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1CollectionNamespacedIngress', function() {
      it('should call deleteExtensionsV1beta1CollectionNamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1CollectionNamespacedIngress
        //instance.deleteExtensionsV1beta1CollectionNamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy', function() {
      it('should call deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy
        //instance.deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1CollectionNamespacedReplicaSet', function() {
      it('should call deleteExtensionsV1beta1CollectionNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1CollectionNamespacedReplicaSet
        //instance.deleteExtensionsV1beta1CollectionNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1CollectionPodSecurityPolicy', function() {
      it('should call deleteExtensionsV1beta1CollectionPodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1CollectionPodSecurityPolicy
        //instance.deleteExtensionsV1beta1CollectionPodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1CollectionThirdPartyResource', function() {
      it('should call deleteExtensionsV1beta1CollectionThirdPartyResource successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1CollectionThirdPartyResource
        //instance.deleteExtensionsV1beta1CollectionThirdPartyResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1NamespacedDaemonSet', function() {
      it('should call deleteExtensionsV1beta1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1NamespacedDaemonSet
        //instance.deleteExtensionsV1beta1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1NamespacedDeployment', function() {
      it('should call deleteExtensionsV1beta1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1NamespacedDeployment
        //instance.deleteExtensionsV1beta1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1NamespacedHorizontalPodAutoscaler', function() {
      it('should call deleteExtensionsV1beta1NamespacedHorizontalPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1NamespacedHorizontalPodAutoscaler
        //instance.deleteExtensionsV1beta1NamespacedHorizontalPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1NamespacedIngress', function() {
      it('should call deleteExtensionsV1beta1NamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1NamespacedIngress
        //instance.deleteExtensionsV1beta1NamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1NamespacedNetworkPolicy', function() {
      it('should call deleteExtensionsV1beta1NamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1NamespacedNetworkPolicy
        //instance.deleteExtensionsV1beta1NamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1NamespacedReplicaSet', function() {
      it('should call deleteExtensionsV1beta1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1NamespacedReplicaSet
        //instance.deleteExtensionsV1beta1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1PodSecurityPolicy', function() {
      it('should call deleteExtensionsV1beta1PodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1PodSecurityPolicy
        //instance.deleteExtensionsV1beta1PodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteExtensionsV1beta1ThirdPartyResource', function() {
      it('should call deleteExtensionsV1beta1ThirdPartyResource successfully', function(done) {
        //uncomment below and update the code to test deleteExtensionsV1beta1ThirdPartyResource
        //instance.deleteExtensionsV1beta1ThirdPartyResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExtensionsV1beta1APIResources', function() {
      it('should call getExtensionsV1beta1APIResources successfully', function(done) {
        //uncomment below and update the code to test getExtensionsV1beta1APIResources
        //instance.getExtensionsV1beta1APIResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1DaemonSetForAllNamespaces', function() {
      it('should call listExtensionsV1beta1DaemonSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1DaemonSetForAllNamespaces
        //instance.listExtensionsV1beta1DaemonSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1DeploymentForAllNamespaces', function() {
      it('should call listExtensionsV1beta1DeploymentForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1DeploymentForAllNamespaces
        //instance.listExtensionsV1beta1DeploymentForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces', function() {
      it('should call listExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces
        //instance.listExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1IngressForAllNamespaces', function() {
      it('should call listExtensionsV1beta1IngressForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1IngressForAllNamespaces
        //instance.listExtensionsV1beta1IngressForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1NamespacedDaemonSet', function() {
      it('should call listExtensionsV1beta1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1NamespacedDaemonSet
        //instance.listExtensionsV1beta1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1NamespacedDeployment', function() {
      it('should call listExtensionsV1beta1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1NamespacedDeployment
        //instance.listExtensionsV1beta1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1NamespacedHorizontalPodAutoscaler', function() {
      it('should call listExtensionsV1beta1NamespacedHorizontalPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1NamespacedHorizontalPodAutoscaler
        //instance.listExtensionsV1beta1NamespacedHorizontalPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1NamespacedIngress', function() {
      it('should call listExtensionsV1beta1NamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1NamespacedIngress
        //instance.listExtensionsV1beta1NamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1NamespacedNetworkPolicy', function() {
      it('should call listExtensionsV1beta1NamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1NamespacedNetworkPolicy
        //instance.listExtensionsV1beta1NamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1NamespacedReplicaSet', function() {
      it('should call listExtensionsV1beta1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1NamespacedReplicaSet
        //instance.listExtensionsV1beta1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1NetworkPolicyForAllNamespaces', function() {
      it('should call listExtensionsV1beta1NetworkPolicyForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1NetworkPolicyForAllNamespaces
        //instance.listExtensionsV1beta1NetworkPolicyForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1PodSecurityPolicy', function() {
      it('should call listExtensionsV1beta1PodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1PodSecurityPolicy
        //instance.listExtensionsV1beta1PodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1ReplicaSetForAllNamespaces', function() {
      it('should call listExtensionsV1beta1ReplicaSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1ReplicaSetForAllNamespaces
        //instance.listExtensionsV1beta1ReplicaSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExtensionsV1beta1ThirdPartyResource', function() {
      it('should call listExtensionsV1beta1ThirdPartyResource successfully', function(done) {
        //uncomment below and update the code to test listExtensionsV1beta1ThirdPartyResource
        //instance.listExtensionsV1beta1ThirdPartyResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedDaemonSet', function() {
      it('should call patchExtensionsV1beta1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedDaemonSet
        //instance.patchExtensionsV1beta1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedDaemonSetStatus', function() {
      it('should call patchExtensionsV1beta1NamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedDaemonSetStatus
        //instance.patchExtensionsV1beta1NamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedDeployment', function() {
      it('should call patchExtensionsV1beta1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedDeployment
        //instance.patchExtensionsV1beta1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedDeploymentStatus', function() {
      it('should call patchExtensionsV1beta1NamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedDeploymentStatus
        //instance.patchExtensionsV1beta1NamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedDeploymentsScale', function() {
      it('should call patchExtensionsV1beta1NamespacedDeploymentsScale successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedDeploymentsScale
        //instance.patchExtensionsV1beta1NamespacedDeploymentsScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedHorizontalPodAutoscaler', function() {
      it('should call patchExtensionsV1beta1NamespacedHorizontalPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedHorizontalPodAutoscaler
        //instance.patchExtensionsV1beta1NamespacedHorizontalPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus', function() {
      it('should call patchExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus
        //instance.patchExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedIngress', function() {
      it('should call patchExtensionsV1beta1NamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedIngress
        //instance.patchExtensionsV1beta1NamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedIngressStatus', function() {
      it('should call patchExtensionsV1beta1NamespacedIngressStatus successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedIngressStatus
        //instance.patchExtensionsV1beta1NamespacedIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedNetworkPolicy', function() {
      it('should call patchExtensionsV1beta1NamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedNetworkPolicy
        //instance.patchExtensionsV1beta1NamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedReplicaSet', function() {
      it('should call patchExtensionsV1beta1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedReplicaSet
        //instance.patchExtensionsV1beta1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedReplicaSetStatus', function() {
      it('should call patchExtensionsV1beta1NamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedReplicaSetStatus
        //instance.patchExtensionsV1beta1NamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedReplicasetsScale', function() {
      it('should call patchExtensionsV1beta1NamespacedReplicasetsScale successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedReplicasetsScale
        //instance.patchExtensionsV1beta1NamespacedReplicasetsScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1NamespacedReplicationcontrollersScale', function() {
      it('should call patchExtensionsV1beta1NamespacedReplicationcontrollersScale successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1NamespacedReplicationcontrollersScale
        //instance.patchExtensionsV1beta1NamespacedReplicationcontrollersScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1PodSecurityPolicy', function() {
      it('should call patchExtensionsV1beta1PodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1PodSecurityPolicy
        //instance.patchExtensionsV1beta1PodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchExtensionsV1beta1ThirdPartyResource', function() {
      it('should call patchExtensionsV1beta1ThirdPartyResource successfully', function(done) {
        //uncomment below and update the code to test patchExtensionsV1beta1ThirdPartyResource
        //instance.patchExtensionsV1beta1ThirdPartyResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedDaemonSet', function() {
      it('should call readExtensionsV1beta1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedDaemonSet
        //instance.readExtensionsV1beta1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedDaemonSetStatus', function() {
      it('should call readExtensionsV1beta1NamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedDaemonSetStatus
        //instance.readExtensionsV1beta1NamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedDeployment', function() {
      it('should call readExtensionsV1beta1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedDeployment
        //instance.readExtensionsV1beta1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedDeploymentStatus', function() {
      it('should call readExtensionsV1beta1NamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedDeploymentStatus
        //instance.readExtensionsV1beta1NamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedDeploymentsScale', function() {
      it('should call readExtensionsV1beta1NamespacedDeploymentsScale successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedDeploymentsScale
        //instance.readExtensionsV1beta1NamespacedDeploymentsScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedHorizontalPodAutoscaler', function() {
      it('should call readExtensionsV1beta1NamespacedHorizontalPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedHorizontalPodAutoscaler
        //instance.readExtensionsV1beta1NamespacedHorizontalPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus', function() {
      it('should call readExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus
        //instance.readExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedIngress', function() {
      it('should call readExtensionsV1beta1NamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedIngress
        //instance.readExtensionsV1beta1NamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedIngressStatus', function() {
      it('should call readExtensionsV1beta1NamespacedIngressStatus successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedIngressStatus
        //instance.readExtensionsV1beta1NamespacedIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedNetworkPolicy', function() {
      it('should call readExtensionsV1beta1NamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedNetworkPolicy
        //instance.readExtensionsV1beta1NamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedReplicaSet', function() {
      it('should call readExtensionsV1beta1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedReplicaSet
        //instance.readExtensionsV1beta1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedReplicaSetStatus', function() {
      it('should call readExtensionsV1beta1NamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedReplicaSetStatus
        //instance.readExtensionsV1beta1NamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedReplicasetsScale', function() {
      it('should call readExtensionsV1beta1NamespacedReplicasetsScale successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedReplicasetsScale
        //instance.readExtensionsV1beta1NamespacedReplicasetsScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1NamespacedReplicationcontrollersScale', function() {
      it('should call readExtensionsV1beta1NamespacedReplicationcontrollersScale successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1NamespacedReplicationcontrollersScale
        //instance.readExtensionsV1beta1NamespacedReplicationcontrollersScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1PodSecurityPolicy', function() {
      it('should call readExtensionsV1beta1PodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1PodSecurityPolicy
        //instance.readExtensionsV1beta1PodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readExtensionsV1beta1ThirdPartyResource', function() {
      it('should call readExtensionsV1beta1ThirdPartyResource successfully', function(done) {
        //uncomment below and update the code to test readExtensionsV1beta1ThirdPartyResource
        //instance.readExtensionsV1beta1ThirdPartyResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedDaemonSet', function() {
      it('should call replaceExtensionsV1beta1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedDaemonSet
        //instance.replaceExtensionsV1beta1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedDaemonSetStatus', function() {
      it('should call replaceExtensionsV1beta1NamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedDaemonSetStatus
        //instance.replaceExtensionsV1beta1NamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedDeployment', function() {
      it('should call replaceExtensionsV1beta1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedDeployment
        //instance.replaceExtensionsV1beta1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedDeploymentStatus', function() {
      it('should call replaceExtensionsV1beta1NamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedDeploymentStatus
        //instance.replaceExtensionsV1beta1NamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedDeploymentsScale', function() {
      it('should call replaceExtensionsV1beta1NamespacedDeploymentsScale successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedDeploymentsScale
        //instance.replaceExtensionsV1beta1NamespacedDeploymentsScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedHorizontalPodAutoscaler', function() {
      it('should call replaceExtensionsV1beta1NamespacedHorizontalPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedHorizontalPodAutoscaler
        //instance.replaceExtensionsV1beta1NamespacedHorizontalPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus', function() {
      it('should call replaceExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus
        //instance.replaceExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedIngress', function() {
      it('should call replaceExtensionsV1beta1NamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedIngress
        //instance.replaceExtensionsV1beta1NamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedIngressStatus', function() {
      it('should call replaceExtensionsV1beta1NamespacedIngressStatus successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedIngressStatus
        //instance.replaceExtensionsV1beta1NamespacedIngressStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedNetworkPolicy', function() {
      it('should call replaceExtensionsV1beta1NamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedNetworkPolicy
        //instance.replaceExtensionsV1beta1NamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedReplicaSet', function() {
      it('should call replaceExtensionsV1beta1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedReplicaSet
        //instance.replaceExtensionsV1beta1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedReplicaSetStatus', function() {
      it('should call replaceExtensionsV1beta1NamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedReplicaSetStatus
        //instance.replaceExtensionsV1beta1NamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedReplicasetsScale', function() {
      it('should call replaceExtensionsV1beta1NamespacedReplicasetsScale successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedReplicasetsScale
        //instance.replaceExtensionsV1beta1NamespacedReplicasetsScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1NamespacedReplicationcontrollersScale', function() {
      it('should call replaceExtensionsV1beta1NamespacedReplicationcontrollersScale successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1NamespacedReplicationcontrollersScale
        //instance.replaceExtensionsV1beta1NamespacedReplicationcontrollersScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1PodSecurityPolicy', function() {
      it('should call replaceExtensionsV1beta1PodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1PodSecurityPolicy
        //instance.replaceExtensionsV1beta1PodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceExtensionsV1beta1ThirdPartyResource', function() {
      it('should call replaceExtensionsV1beta1ThirdPartyResource successfully', function(done) {
        //uncomment below and update the code to test replaceExtensionsV1beta1ThirdPartyResource
        //instance.replaceExtensionsV1beta1ThirdPartyResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1DaemonSetListForAllNamespaces', function() {
      it('should call watchExtensionsV1beta1DaemonSetListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1DaemonSetListForAllNamespaces
        //instance.watchExtensionsV1beta1DaemonSetListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1DeploymentListForAllNamespaces', function() {
      it('should call watchExtensionsV1beta1DeploymentListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1DeploymentListForAllNamespaces
        //instance.watchExtensionsV1beta1DeploymentListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1HorizontalPodAutoscalerListForAllNamespaces', function() {
      it('should call watchExtensionsV1beta1HorizontalPodAutoscalerListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1HorizontalPodAutoscalerListForAllNamespaces
        //instance.watchExtensionsV1beta1HorizontalPodAutoscalerListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1IngressListForAllNamespaces', function() {
      it('should call watchExtensionsV1beta1IngressListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1IngressListForAllNamespaces
        //instance.watchExtensionsV1beta1IngressListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedDaemonSet', function() {
      it('should call watchExtensionsV1beta1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedDaemonSet
        //instance.watchExtensionsV1beta1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedDaemonSetList', function() {
      it('should call watchExtensionsV1beta1NamespacedDaemonSetList successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedDaemonSetList
        //instance.watchExtensionsV1beta1NamespacedDaemonSetList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedDeployment', function() {
      it('should call watchExtensionsV1beta1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedDeployment
        //instance.watchExtensionsV1beta1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedDeploymentList', function() {
      it('should call watchExtensionsV1beta1NamespacedDeploymentList successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedDeploymentList
        //instance.watchExtensionsV1beta1NamespacedDeploymentList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedHorizontalPodAutoscaler', function() {
      it('should call watchExtensionsV1beta1NamespacedHorizontalPodAutoscaler successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedHorizontalPodAutoscaler
        //instance.watchExtensionsV1beta1NamespacedHorizontalPodAutoscaler(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedHorizontalPodAutoscalerList', function() {
      it('should call watchExtensionsV1beta1NamespacedHorizontalPodAutoscalerList successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedHorizontalPodAutoscalerList
        //instance.watchExtensionsV1beta1NamespacedHorizontalPodAutoscalerList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedIngress', function() {
      it('should call watchExtensionsV1beta1NamespacedIngress successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedIngress
        //instance.watchExtensionsV1beta1NamespacedIngress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedIngressList', function() {
      it('should call watchExtensionsV1beta1NamespacedIngressList successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedIngressList
        //instance.watchExtensionsV1beta1NamespacedIngressList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedNetworkPolicy', function() {
      it('should call watchExtensionsV1beta1NamespacedNetworkPolicy successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedNetworkPolicy
        //instance.watchExtensionsV1beta1NamespacedNetworkPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedNetworkPolicyList', function() {
      it('should call watchExtensionsV1beta1NamespacedNetworkPolicyList successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedNetworkPolicyList
        //instance.watchExtensionsV1beta1NamespacedNetworkPolicyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedReplicaSet', function() {
      it('should call watchExtensionsV1beta1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedReplicaSet
        //instance.watchExtensionsV1beta1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NamespacedReplicaSetList', function() {
      it('should call watchExtensionsV1beta1NamespacedReplicaSetList successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NamespacedReplicaSetList
        //instance.watchExtensionsV1beta1NamespacedReplicaSetList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1NetworkPolicyListForAllNamespaces', function() {
      it('should call watchExtensionsV1beta1NetworkPolicyListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1NetworkPolicyListForAllNamespaces
        //instance.watchExtensionsV1beta1NetworkPolicyListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1PodSecurityPolicy', function() {
      it('should call watchExtensionsV1beta1PodSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1PodSecurityPolicy
        //instance.watchExtensionsV1beta1PodSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1PodSecurityPolicyList', function() {
      it('should call watchExtensionsV1beta1PodSecurityPolicyList successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1PodSecurityPolicyList
        //instance.watchExtensionsV1beta1PodSecurityPolicyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1ReplicaSetListForAllNamespaces', function() {
      it('should call watchExtensionsV1beta1ReplicaSetListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1ReplicaSetListForAllNamespaces
        //instance.watchExtensionsV1beta1ReplicaSetListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1ThirdPartyResource', function() {
      it('should call watchExtensionsV1beta1ThirdPartyResource successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1ThirdPartyResource
        //instance.watchExtensionsV1beta1ThirdPartyResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchExtensionsV1beta1ThirdPartyResourceList', function() {
      it('should call watchExtensionsV1beta1ThirdPartyResourceList successfully', function(done) {
        //uncomment below and update the code to test watchExtensionsV1beta1ThirdPartyResourceList
        //instance.watchExtensionsV1beta1ThirdPartyResourceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
