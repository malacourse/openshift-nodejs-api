/**
 * OpenShift API (with Kubernetes)
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'metav1.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 
 *
 * OpenAPI spec version: v3.6.173.0.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenShiftApiWithKubernetes);
  }
}(this, function(expect, OpenShiftApiWithKubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenShiftApiWithKubernetes.AuthorizationOpenshiftIoV1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthorizationOpenshiftIoV1Api', function() {
    describe('createAuthorizationOpenshiftIoV1ClusterPolicy', function() {
      it('should call createAuthorizationOpenshiftIoV1ClusterPolicy successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1ClusterPolicy
        //instance.createAuthorizationOpenshiftIoV1ClusterPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1ClusterPolicyBinding', function() {
      it('should call createAuthorizationOpenshiftIoV1ClusterPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1ClusterPolicyBinding
        //instance.createAuthorizationOpenshiftIoV1ClusterPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1ClusterRole', function() {
      it('should call createAuthorizationOpenshiftIoV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1ClusterRole
        //instance.createAuthorizationOpenshiftIoV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1ClusterRoleBinding', function() {
      it('should call createAuthorizationOpenshiftIoV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1ClusterRoleBinding
        //instance.createAuthorizationOpenshiftIoV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1LocalResourceAccessReviewForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1LocalResourceAccessReviewForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1LocalResourceAccessReviewForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1LocalResourceAccessReviewForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1LocalSubjectAccessReviewForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1LocalSubjectAccessReviewForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1LocalSubjectAccessReviewForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1LocalSubjectAccessReviewForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview
        //instance.createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview
        //instance.createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedPolicy', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedPolicy
        //instance.createAuthorizationOpenshiftIoV1NamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedPolicyBinding', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedPolicyBinding
        //instance.createAuthorizationOpenshiftIoV1NamespacedPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedResourceAccessReview', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedResourceAccessReview successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedResourceAccessReview
        //instance.createAuthorizationOpenshiftIoV1NamespacedResourceAccessReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedRole', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedRole
        //instance.createAuthorizationOpenshiftIoV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedRoleBinding', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedRoleBinding
        //instance.createAuthorizationOpenshiftIoV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
        //instance.createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview
        //instance.createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedSubjectAccessReview', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedSubjectAccessReview successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedSubjectAccessReview
        //instance.createAuthorizationOpenshiftIoV1NamespacedSubjectAccessReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview', function() {
      it('should call createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview
        //instance.createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1PolicyForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1PolicyForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1PolicyForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1PolicyForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1ResourceAccessReviewForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1ResourceAccessReviewForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1ResourceAccessReviewForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1ResourceAccessReviewForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1RoleForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1RoleForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1RoleForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1RoleForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1SelfSubjectRulesReviewForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1SelfSubjectRulesReviewForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1SelfSubjectRulesReviewForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1SelfSubjectRulesReviewForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1SubjectAccessReviewForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1SubjectAccessReviewForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1SubjectAccessReviewForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1SubjectAccessReviewForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuthorizationOpenshiftIoV1SubjectRulesReviewForAllNamespaces', function() {
      it('should call createAuthorizationOpenshiftIoV1SubjectRulesReviewForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test createAuthorizationOpenshiftIoV1SubjectRulesReviewForAllNamespaces
        //instance.createAuthorizationOpenshiftIoV1SubjectRulesReviewForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1ClusterPolicy', function() {
      it('should call deleteAuthorizationOpenshiftIoV1ClusterPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1ClusterPolicy
        //instance.deleteAuthorizationOpenshiftIoV1ClusterPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1ClusterPolicyBinding', function() {
      it('should call deleteAuthorizationOpenshiftIoV1ClusterPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1ClusterPolicyBinding
        //instance.deleteAuthorizationOpenshiftIoV1ClusterPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1ClusterRole', function() {
      it('should call deleteAuthorizationOpenshiftIoV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1ClusterRole
        //instance.deleteAuthorizationOpenshiftIoV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1ClusterRoleBinding', function() {
      it('should call deleteAuthorizationOpenshiftIoV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1ClusterRoleBinding
        //instance.deleteAuthorizationOpenshiftIoV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1CollectionClusterPolicy', function() {
      it('should call deleteAuthorizationOpenshiftIoV1CollectionClusterPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1CollectionClusterPolicy
        //instance.deleteAuthorizationOpenshiftIoV1CollectionClusterPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1CollectionClusterPolicyBinding', function() {
      it('should call deleteAuthorizationOpenshiftIoV1CollectionClusterPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1CollectionClusterPolicyBinding
        //instance.deleteAuthorizationOpenshiftIoV1CollectionClusterPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicy', function() {
      it('should call deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicy
        //instance.deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicyBinding', function() {
      it('should call deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicyBinding
        //instance.deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction', function() {
      it('should call deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction
        //instance.deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1NamespacedPolicy', function() {
      it('should call deleteAuthorizationOpenshiftIoV1NamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1NamespacedPolicy
        //instance.deleteAuthorizationOpenshiftIoV1NamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1NamespacedPolicyBinding', function() {
      it('should call deleteAuthorizationOpenshiftIoV1NamespacedPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1NamespacedPolicyBinding
        //instance.deleteAuthorizationOpenshiftIoV1NamespacedPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1NamespacedRole', function() {
      it('should call deleteAuthorizationOpenshiftIoV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1NamespacedRole
        //instance.deleteAuthorizationOpenshiftIoV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1NamespacedRoleBinding', function() {
      it('should call deleteAuthorizationOpenshiftIoV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1NamespacedRoleBinding
        //instance.deleteAuthorizationOpenshiftIoV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction', function() {
      it('should call deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction successfully', function(done) {
        //uncomment below and update the code to test deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
        //instance.deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuthorizationOpenshiftIoV1APIResources', function() {
      it('should call getAuthorizationOpenshiftIoV1APIResources successfully', function(done) {
        //uncomment below and update the code to test getAuthorizationOpenshiftIoV1APIResources
        //instance.getAuthorizationOpenshiftIoV1APIResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1ClusterPolicy', function() {
      it('should call listAuthorizationOpenshiftIoV1ClusterPolicy successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1ClusterPolicy
        //instance.listAuthorizationOpenshiftIoV1ClusterPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1ClusterPolicyBinding', function() {
      it('should call listAuthorizationOpenshiftIoV1ClusterPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1ClusterPolicyBinding
        //instance.listAuthorizationOpenshiftIoV1ClusterPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1ClusterRole', function() {
      it('should call listAuthorizationOpenshiftIoV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1ClusterRole
        //instance.listAuthorizationOpenshiftIoV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1ClusterRoleBinding', function() {
      it('should call listAuthorizationOpenshiftIoV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1ClusterRoleBinding
        //instance.listAuthorizationOpenshiftIoV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1NamespacedPolicy', function() {
      it('should call listAuthorizationOpenshiftIoV1NamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1NamespacedPolicy
        //instance.listAuthorizationOpenshiftIoV1NamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1NamespacedPolicyBinding', function() {
      it('should call listAuthorizationOpenshiftIoV1NamespacedPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1NamespacedPolicyBinding
        //instance.listAuthorizationOpenshiftIoV1NamespacedPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1NamespacedRole', function() {
      it('should call listAuthorizationOpenshiftIoV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1NamespacedRole
        //instance.listAuthorizationOpenshiftIoV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1NamespacedRoleBinding', function() {
      it('should call listAuthorizationOpenshiftIoV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1NamespacedRoleBinding
        //instance.listAuthorizationOpenshiftIoV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction', function() {
      it('should call listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
        //instance.listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces', function() {
      it('should call listAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces
        //instance.listAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1PolicyForAllNamespaces', function() {
      it('should call listAuthorizationOpenshiftIoV1PolicyForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1PolicyForAllNamespaces
        //instance.listAuthorizationOpenshiftIoV1PolicyForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces', function() {
      it('should call listAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces
        //instance.listAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces', function() {
      it('should call listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces
        //instance.listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAuthorizationOpenshiftIoV1RoleForAllNamespaces', function() {
      it('should call listAuthorizationOpenshiftIoV1RoleForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAuthorizationOpenshiftIoV1RoleForAllNamespaces
        //instance.listAuthorizationOpenshiftIoV1RoleForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1ClusterPolicy', function() {
      it('should call patchAuthorizationOpenshiftIoV1ClusterPolicy successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1ClusterPolicy
        //instance.patchAuthorizationOpenshiftIoV1ClusterPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1ClusterPolicyBinding', function() {
      it('should call patchAuthorizationOpenshiftIoV1ClusterPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1ClusterPolicyBinding
        //instance.patchAuthorizationOpenshiftIoV1ClusterPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1ClusterRole', function() {
      it('should call patchAuthorizationOpenshiftIoV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1ClusterRole
        //instance.patchAuthorizationOpenshiftIoV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1ClusterRoleBinding', function() {
      it('should call patchAuthorizationOpenshiftIoV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1ClusterRoleBinding
        //instance.patchAuthorizationOpenshiftIoV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1NamespacedPolicy', function() {
      it('should call patchAuthorizationOpenshiftIoV1NamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1NamespacedPolicy
        //instance.patchAuthorizationOpenshiftIoV1NamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1NamespacedPolicyBinding', function() {
      it('should call patchAuthorizationOpenshiftIoV1NamespacedPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1NamespacedPolicyBinding
        //instance.patchAuthorizationOpenshiftIoV1NamespacedPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1NamespacedRole', function() {
      it('should call patchAuthorizationOpenshiftIoV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1NamespacedRole
        //instance.patchAuthorizationOpenshiftIoV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1NamespacedRoleBinding', function() {
      it('should call patchAuthorizationOpenshiftIoV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1NamespacedRoleBinding
        //instance.patchAuthorizationOpenshiftIoV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction', function() {
      it('should call patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction successfully', function(done) {
        //uncomment below and update the code to test patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
        //instance.patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1ClusterPolicy', function() {
      it('should call readAuthorizationOpenshiftIoV1ClusterPolicy successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1ClusterPolicy
        //instance.readAuthorizationOpenshiftIoV1ClusterPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1ClusterPolicyBinding', function() {
      it('should call readAuthorizationOpenshiftIoV1ClusterPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1ClusterPolicyBinding
        //instance.readAuthorizationOpenshiftIoV1ClusterPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1ClusterRole', function() {
      it('should call readAuthorizationOpenshiftIoV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1ClusterRole
        //instance.readAuthorizationOpenshiftIoV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1ClusterRoleBinding', function() {
      it('should call readAuthorizationOpenshiftIoV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1ClusterRoleBinding
        //instance.readAuthorizationOpenshiftIoV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1NamespacedPolicy', function() {
      it('should call readAuthorizationOpenshiftIoV1NamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1NamespacedPolicy
        //instance.readAuthorizationOpenshiftIoV1NamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1NamespacedPolicyBinding', function() {
      it('should call readAuthorizationOpenshiftIoV1NamespacedPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1NamespacedPolicyBinding
        //instance.readAuthorizationOpenshiftIoV1NamespacedPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1NamespacedRole', function() {
      it('should call readAuthorizationOpenshiftIoV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1NamespacedRole
        //instance.readAuthorizationOpenshiftIoV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1NamespacedRoleBinding', function() {
      it('should call readAuthorizationOpenshiftIoV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1NamespacedRoleBinding
        //instance.readAuthorizationOpenshiftIoV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction', function() {
      it('should call readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction successfully', function(done) {
        //uncomment below and update the code to test readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
        //instance.readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1ClusterPolicy', function() {
      it('should call replaceAuthorizationOpenshiftIoV1ClusterPolicy successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1ClusterPolicy
        //instance.replaceAuthorizationOpenshiftIoV1ClusterPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1ClusterPolicyBinding', function() {
      it('should call replaceAuthorizationOpenshiftIoV1ClusterPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1ClusterPolicyBinding
        //instance.replaceAuthorizationOpenshiftIoV1ClusterPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1ClusterRole', function() {
      it('should call replaceAuthorizationOpenshiftIoV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1ClusterRole
        //instance.replaceAuthorizationOpenshiftIoV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1ClusterRoleBinding', function() {
      it('should call replaceAuthorizationOpenshiftIoV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1ClusterRoleBinding
        //instance.replaceAuthorizationOpenshiftIoV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1NamespacedPolicy', function() {
      it('should call replaceAuthorizationOpenshiftIoV1NamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1NamespacedPolicy
        //instance.replaceAuthorizationOpenshiftIoV1NamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1NamespacedPolicyBinding', function() {
      it('should call replaceAuthorizationOpenshiftIoV1NamespacedPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1NamespacedPolicyBinding
        //instance.replaceAuthorizationOpenshiftIoV1NamespacedPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1NamespacedRole', function() {
      it('should call replaceAuthorizationOpenshiftIoV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1NamespacedRole
        //instance.replaceAuthorizationOpenshiftIoV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1NamespacedRoleBinding', function() {
      it('should call replaceAuthorizationOpenshiftIoV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1NamespacedRoleBinding
        //instance.replaceAuthorizationOpenshiftIoV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction', function() {
      it('should call replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction successfully', function(done) {
        //uncomment below and update the code to test replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
        //instance.replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1ClusterPolicy', function() {
      it('should call watchAuthorizationOpenshiftIoV1ClusterPolicy successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1ClusterPolicy
        //instance.watchAuthorizationOpenshiftIoV1ClusterPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1ClusterPolicyBinding', function() {
      it('should call watchAuthorizationOpenshiftIoV1ClusterPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1ClusterPolicyBinding
        //instance.watchAuthorizationOpenshiftIoV1ClusterPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1ClusterPolicyBindingList', function() {
      it('should call watchAuthorizationOpenshiftIoV1ClusterPolicyBindingList successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1ClusterPolicyBindingList
        //instance.watchAuthorizationOpenshiftIoV1ClusterPolicyBindingList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1ClusterPolicyList', function() {
      it('should call watchAuthorizationOpenshiftIoV1ClusterPolicyList successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1ClusterPolicyList
        //instance.watchAuthorizationOpenshiftIoV1ClusterPolicyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1NamespacedPolicy', function() {
      it('should call watchAuthorizationOpenshiftIoV1NamespacedPolicy successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1NamespacedPolicy
        //instance.watchAuthorizationOpenshiftIoV1NamespacedPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1NamespacedPolicyBinding', function() {
      it('should call watchAuthorizationOpenshiftIoV1NamespacedPolicyBinding successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1NamespacedPolicyBinding
        //instance.watchAuthorizationOpenshiftIoV1NamespacedPolicyBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1NamespacedPolicyBindingList', function() {
      it('should call watchAuthorizationOpenshiftIoV1NamespacedPolicyBindingList successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1NamespacedPolicyBindingList
        //instance.watchAuthorizationOpenshiftIoV1NamespacedPolicyBindingList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1NamespacedPolicyList', function() {
      it('should call watchAuthorizationOpenshiftIoV1NamespacedPolicyList successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1NamespacedPolicyList
        //instance.watchAuthorizationOpenshiftIoV1NamespacedPolicyList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction', function() {
      it('should call watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
        //instance.watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionList', function() {
      it('should call watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionList successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionList
        //instance.watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1PolicyBindingListForAllNamespaces', function() {
      it('should call watchAuthorizationOpenshiftIoV1PolicyBindingListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1PolicyBindingListForAllNamespaces
        //instance.watchAuthorizationOpenshiftIoV1PolicyBindingListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1PolicyListForAllNamespaces', function() {
      it('should call watchAuthorizationOpenshiftIoV1PolicyListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1PolicyListForAllNamespaces
        //instance.watchAuthorizationOpenshiftIoV1PolicyListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespaces', function() {
      it('should call watchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespaces
        //instance.watchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
