/**
 * OpenShift API (with Kubernetes)
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'metav1.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 
 *
 * OpenAPI spec version: v3.6.173.0.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import ComGithubOpenshiftOriginPkgSecurityApisSecurityV1FSGroupStrategyOptions from './ComGithubOpenshiftOriginPkgSecurityApisSecurityV1FSGroupStrategyOptions';
import ComGithubOpenshiftOriginPkgSecurityApisSecurityV1RunAsUserStrategyOptions from './ComGithubOpenshiftOriginPkgSecurityApisSecurityV1RunAsUserStrategyOptions';
import ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SELinuxContextStrategyOptions from './ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SELinuxContextStrategyOptions';
import ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SupplementalGroupsStrategyOptions from './ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SupplementalGroupsStrategyOptions';
import IoK8sApimachineryPkgApisMetaV1ObjectMeta from './IoK8sApimachineryPkgApisMetaV1ObjectMeta';





/**
* The ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints model module.
* @module model/ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints
* @version v3.6.173.0.21
*/
export default class ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints {
    /**
    * Constructs a new <code>ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints</code>.
    * SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container.
    * @alias module:model/ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints
    * @class
    * @param allowHostDirVolumePlugin {Boolean} AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin
    * @param allowHostIPC {Boolean} AllowHostIPC determines if the policy allows host ipc in the containers.
    * @param allowHostNetwork {Boolean} AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
    * @param allowHostPID {Boolean} AllowHostPID determines if the policy allows host pid in the containers.
    * @param allowHostPorts {Boolean} AllowHostPorts determines if the policy allows host ports in the containers.
    * @param allowPrivilegedContainer {Boolean} AllowPrivilegedContainer determines if a container can request to be run as privileged.
    * @param allowedCapabilities {Array.<String>} AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'.
    * @param defaultAddCapabilities {Array.<String>} DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.
    * @param priority {Number} Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority.  If scores for multiple SCCs are equal they will be sorted by name.
    * @param readOnlyRootFilesystem {Boolean} ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
    * @param requiredDropCapabilities {Array.<String>} RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
    * @param volumes {Array.<String>} Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \"*\". To allow no volumes, set to [\"none\"].
    */

    constructor(allowHostDirVolumePlugin, allowHostIPC, allowHostNetwork, allowHostPID, allowHostPorts, allowPrivilegedContainer, allowedCapabilities, defaultAddCapabilities, priority, readOnlyRootFilesystem, requiredDropCapabilities, volumes) {
        

        
        

        this['allowHostDirVolumePlugin'] = allowHostDirVolumePlugin;this['allowHostIPC'] = allowHostIPC;this['allowHostNetwork'] = allowHostNetwork;this['allowHostPID'] = allowHostPID;this['allowHostPorts'] = allowHostPorts;this['allowPrivilegedContainer'] = allowPrivilegedContainer;this['allowedCapabilities'] = allowedCapabilities;this['defaultAddCapabilities'] = defaultAddCapabilities;this['priority'] = priority;this['readOnlyRootFilesystem'] = readOnlyRootFilesystem;this['requiredDropCapabilities'] = requiredDropCapabilities;this['volumes'] = volumes;

        
    }

    /**
    * Constructs a <code>ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints} obj Optional instance to populate.
    * @return {module:model/ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints} The populated <code>ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SecurityContextConstraints();

            
            
            

            if (data.hasOwnProperty('allowHostDirVolumePlugin')) {
                obj['allowHostDirVolumePlugin'] = ApiClient.convertToType(data['allowHostDirVolumePlugin'], 'Boolean');
            }
            if (data.hasOwnProperty('allowHostIPC')) {
                obj['allowHostIPC'] = ApiClient.convertToType(data['allowHostIPC'], 'Boolean');
            }
            if (data.hasOwnProperty('allowHostNetwork')) {
                obj['allowHostNetwork'] = ApiClient.convertToType(data['allowHostNetwork'], 'Boolean');
            }
            if (data.hasOwnProperty('allowHostPID')) {
                obj['allowHostPID'] = ApiClient.convertToType(data['allowHostPID'], 'Boolean');
            }
            if (data.hasOwnProperty('allowHostPorts')) {
                obj['allowHostPorts'] = ApiClient.convertToType(data['allowHostPorts'], 'Boolean');
            }
            if (data.hasOwnProperty('allowPrivilegedContainer')) {
                obj['allowPrivilegedContainer'] = ApiClient.convertToType(data['allowPrivilegedContainer'], 'Boolean');
            }
            if (data.hasOwnProperty('allowedCapabilities')) {
                obj['allowedCapabilities'] = ApiClient.convertToType(data['allowedCapabilities'], ['String']);
            }
            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('defaultAddCapabilities')) {
                obj['defaultAddCapabilities'] = ApiClient.convertToType(data['defaultAddCapabilities'], ['String']);
            }
            if (data.hasOwnProperty('fsGroup')) {
                obj['fsGroup'] = ComGithubOpenshiftOriginPkgSecurityApisSecurityV1FSGroupStrategyOptions.constructFromObject(data['fsGroup']);
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], ['String']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = IoK8sApimachineryPkgApisMetaV1ObjectMeta.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('readOnlyRootFilesystem')) {
                obj['readOnlyRootFilesystem'] = ApiClient.convertToType(data['readOnlyRootFilesystem'], 'Boolean');
            }
            if (data.hasOwnProperty('requiredDropCapabilities')) {
                obj['requiredDropCapabilities'] = ApiClient.convertToType(data['requiredDropCapabilities'], ['String']);
            }
            if (data.hasOwnProperty('runAsUser')) {
                obj['runAsUser'] = ComGithubOpenshiftOriginPkgSecurityApisSecurityV1RunAsUserStrategyOptions.constructFromObject(data['runAsUser']);
            }
            if (data.hasOwnProperty('seLinuxContext')) {
                obj['seLinuxContext'] = ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SELinuxContextStrategyOptions.constructFromObject(data['seLinuxContext']);
            }
            if (data.hasOwnProperty('seccompProfiles')) {
                obj['seccompProfiles'] = ApiClient.convertToType(data['seccompProfiles'], ['String']);
            }
            if (data.hasOwnProperty('supplementalGroups')) {
                obj['supplementalGroups'] = ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SupplementalGroupsStrategyOptions.constructFromObject(data['supplementalGroups']);
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], ['String']);
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], ['String']);
            }
        }
        return obj;
    }

    /**
    * AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin
    * @member {Boolean} allowHostDirVolumePlugin
    */
    allowHostDirVolumePlugin = undefined;
    /**
    * AllowHostIPC determines if the policy allows host ipc in the containers.
    * @member {Boolean} allowHostIPC
    */
    allowHostIPC = undefined;
    /**
    * AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
    * @member {Boolean} allowHostNetwork
    */
    allowHostNetwork = undefined;
    /**
    * AllowHostPID determines if the policy allows host pid in the containers.
    * @member {Boolean} allowHostPID
    */
    allowHostPID = undefined;
    /**
    * AllowHostPorts determines if the policy allows host ports in the containers.
    * @member {Boolean} allowHostPorts
    */
    allowHostPorts = undefined;
    /**
    * AllowPrivilegedContainer determines if a container can request to be run as privileged.
    * @member {Boolean} allowPrivilegedContainer
    */
    allowPrivilegedContainer = undefined;
    /**
    * AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'.
    * @member {Array.<String>} allowedCapabilities
    */
    allowedCapabilities = undefined;
    /**
    * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
    * @member {String} apiVersion
    */
    apiVersion = undefined;
    /**
    * DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.
    * @member {Array.<String>} defaultAddCapabilities
    */
    defaultAddCapabilities = undefined;
    /**
    * FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
    * @member {module:model/ComGithubOpenshiftOriginPkgSecurityApisSecurityV1FSGroupStrategyOptions} fsGroup
    */
    fsGroup = undefined;
    /**
    * The groups that have permission to use this security context constraints
    * @member {Array.<String>} groups
    */
    groups = undefined;
    /**
    * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
    * @member {String} kind
    */
    kind = undefined;
    /**
    * Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
    * @member {module:model/IoK8sApimachineryPkgApisMetaV1ObjectMeta} metadata
    */
    metadata = undefined;
    /**
    * Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority.  If scores for multiple SCCs are equal they will be sorted by name.
    * @member {Number} priority
    */
    priority = undefined;
    /**
    * ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
    * @member {Boolean} readOnlyRootFilesystem
    */
    readOnlyRootFilesystem = undefined;
    /**
    * RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
    * @member {Array.<String>} requiredDropCapabilities
    */
    requiredDropCapabilities = undefined;
    /**
    * RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.
    * @member {module:model/ComGithubOpenshiftOriginPkgSecurityApisSecurityV1RunAsUserStrategyOptions} runAsUser
    */
    runAsUser = undefined;
    /**
    * SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.
    * @member {module:model/ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SELinuxContextStrategyOptions} seLinuxContext
    */
    seLinuxContext = undefined;
    /**
    * SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container. The wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default.
    * @member {Array.<String>} seccompProfiles
    */
    seccompProfiles = undefined;
    /**
    * SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
    * @member {module:model/ComGithubOpenshiftOriginPkgSecurityApisSecurityV1SupplementalGroupsStrategyOptions} supplementalGroups
    */
    supplementalGroups = undefined;
    /**
    * The users who have permissions to use this security context constraints
    * @member {Array.<String>} users
    */
    users = undefined;
    /**
    * Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \"*\". To allow no volumes, set to [\"none\"].
    * @member {Array.<String>} volumes
    */
    volumes = undefined;








}


