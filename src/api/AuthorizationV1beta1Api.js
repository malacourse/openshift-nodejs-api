/**
 * OpenShift API (with Kubernetes)
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'metav1.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information. 
 *
 * OpenAPI spec version: v3.6.173.0.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IoK8sApimachineryPkgApisMetaV1APIResourceList from '../mikespgk/IoK8sApimachineryPkgApisMetaV1APIResourceList';
import IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview from '../mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview';
import IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview from '../mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview';
import IoK8sKubernetesPkgApisAuthorizationV1beta1SubjectAccessReview from '../mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1SubjectAccessReview';

/**
* AuthorizationV1beta1 service.
* @module api/AuthorizationV1beta1Api
* @version v3.6.173.0.21
*/
export default class AuthorizationV1beta1Api {

    /**
    * Constructs a new AuthorizationV1beta1Api. 
    * @alias module:api/AuthorizationV1beta1Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAuthorizationV1beta1LocalSubjectAccessReviewForAllNamespaces operation.
     * @callback module:api/AuthorizationV1beta1Api~createAuthorizationV1beta1LocalSubjectAccessReviewForAllNamespacesCallback
     * @param {String} error Error message, if any.
     * @param {module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a LocalSubjectAccessReview
     * @param {module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:api/AuthorizationV1beta1Api~createAuthorizationV1beta1LocalSubjectAccessReviewForAllNamespacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview}
     */
    createAuthorizationV1beta1LocalSubjectAccessReviewForAllNamespaces(body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createAuthorizationV1beta1LocalSubjectAccessReviewForAllNamespaces");
      }


      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken', 'Oauth2AccessToken', 'Oauth2Implicit'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/localsubjectaccessreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAuthorizationV1beta1NamespacedLocalSubjectAccessReview operation.
     * @callback module:api/AuthorizationV1beta1Api~createAuthorizationV1beta1NamespacedLocalSubjectAccessReviewCallback
     * @param {String} error Error message, if any.
     * @param {module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a LocalSubjectAccessReview
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:api/AuthorizationV1beta1Api~createAuthorizationV1beta1NamespacedLocalSubjectAccessReviewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview}
     */
    createAuthorizationV1beta1NamespacedLocalSubjectAccessReview(namespace, body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'namespace' is set
      if (namespace === undefined || namespace === null) {
        throw new Error("Missing the required parameter 'namespace' when calling createAuthorizationV1beta1NamespacedLocalSubjectAccessReview");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createAuthorizationV1beta1NamespacedLocalSubjectAccessReview");
      }


      let pathParams = {
        'namespace': namespace
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken', 'Oauth2AccessToken', 'Oauth2Implicit'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = IoK8sKubernetesPkgApisAuthorizationV1beta1LocalSubjectAccessReview;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/namespaces/{namespace}/localsubjectaccessreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAuthorizationV1beta1SelfSubjectAccessReview operation.
     * @callback module:api/AuthorizationV1beta1Api~createAuthorizationV1beta1SelfSubjectAccessReviewCallback
     * @param {String} error Error message, if any.
     * @param {module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a SelfSubjectAccessReview
     * @param {module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:api/AuthorizationV1beta1Api~createAuthorizationV1beta1SelfSubjectAccessReviewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview}
     */
    createAuthorizationV1beta1SelfSubjectAccessReview(body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createAuthorizationV1beta1SelfSubjectAccessReview");
      }


      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken', 'Oauth2AccessToken', 'Oauth2Implicit'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = IoK8sKubernetesPkgApisAuthorizationV1beta1SelfSubjectAccessReview;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/selfsubjectaccessreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAuthorizationV1beta1SubjectAccessReview operation.
     * @callback module:api/AuthorizationV1beta1Api~createAuthorizationV1beta1SubjectAccessReviewCallback
     * @param {String} error Error message, if any.
     * @param {module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1SubjectAccessReview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a SubjectAccessReview
     * @param {module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1SubjectAccessReview} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:api/AuthorizationV1beta1Api~createAuthorizationV1beta1SubjectAccessReviewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:mikespgk/IoK8sKubernetesPkgApisAuthorizationV1beta1SubjectAccessReview}
     */
    createAuthorizationV1beta1SubjectAccessReview(body, opts, callback) {
      opts = opts || {};
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createAuthorizationV1beta1SubjectAccessReview");
      }


      let pathParams = {
      };
      let queryParams = {
        'pretty': opts['pretty']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken', 'Oauth2AccessToken', 'Oauth2Implicit'];
      let contentTypes = ['*/*'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = IoK8sKubernetesPkgApisAuthorizationV1beta1SubjectAccessReview;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/subjectaccessreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAuthorizationV1beta1APIResources operation.
     * @callback module:api/AuthorizationV1beta1Api~getAuthorizationV1beta1APIResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:mikespgk/IoK8sApimachineryPkgApisMetaV1APIResourceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get available resources
     * @param {module:api/AuthorizationV1beta1Api~getAuthorizationV1beta1APIResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:mikespgk/IoK8sApimachineryPkgApisMetaV1APIResourceList}
     */
    getAuthorizationV1beta1APIResources(callback) {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerToken', 'Oauth2AccessToken', 'Oauth2Implicit'];
      let contentTypes = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      let returnType = IoK8sApimachineryPkgApisMetaV1APIResourceList;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }


}
